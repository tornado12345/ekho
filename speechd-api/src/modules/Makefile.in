# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright (C) 2002 - 2018 Brailcom, o.p.s.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
modulebin_PROGRAMS = sd_dummy$(EXEEXT) sd_generic$(EXEEXT) \
	sd_festival$(EXEEXT) sd_cicero$(EXEEXT) sd_ekho$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8)
@flite_support_TRUE@am__append_1 = sd_flite
@ibmtts_support_TRUE@am__append_2 = sd_ibmtts
@ibmtts_shim_TRUE@@ibmtts_support_TRUE@am__append_3 = -L.
@ibmtts_shim_TRUE@@ibmtts_support_TRUE@am__append_4 = $(EXTRA_sd_ibmtts_DEPENDENCIES)
@espeak_support_TRUE@am__append_5 = sd_espeak
@espeak_ng_support_TRUE@am__append_6 = sd_espeak-ng
@ivona_support_TRUE@am__append_7 = sd_ivona
@pico_support_TRUE@am__append_8 = sd_pico
@baratinoo_support_TRUE@am__append_9 = sd_baratinoo
@baratinoo_shim_TRUE@@baratinoo_support_TRUE@am__append_10 = -L.
@baratinoo_shim_TRUE@@baratinoo_support_TRUE@am__append_11 = $(EXTRA_sd_baratinoo_DEPENDENCIES)
@kali_support_TRUE@am__append_12 = sd_kali
@kali_shim_TRUE@@kali_support_TRUE@am__append_13 = -L.
@kali_shim_TRUE@@kali_support_TRUE@am__append_14 = -I$(srcdir)/kali_shim
@kali_shim_TRUE@@kali_support_TRUE@am__append_15 = $(EXTRA_sd_kali_DEPENDENCIES)
subdir = src/modules
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_snddata_DATA) \
	$(am__noinst_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@flite_support_TRUE@am__EXEEXT_1 = sd_flite$(EXEEXT)
@ibmtts_support_TRUE@am__EXEEXT_2 = sd_ibmtts$(EXEEXT)
@espeak_support_TRUE@am__EXEEXT_3 = sd_espeak$(EXEEXT)
@espeak_ng_support_TRUE@am__EXEEXT_4 = sd_espeak-ng$(EXEEXT)
@ivona_support_TRUE@am__EXEEXT_5 = sd_ivona$(EXEEXT)
@pico_support_TRUE@am__EXEEXT_6 = sd_pico$(EXEEXT)
@baratinoo_support_TRUE@am__EXEEXT_7 = sd_baratinoo$(EXEEXT)
@kali_support_TRUE@am__EXEEXT_8 = sd_kali$(EXEEXT)
am__installdirs = "$(DESTDIR)$(modulebindir)" \
	"$(DESTDIR)$(snddatadir)"
PROGRAMS = $(modulebin_PROGRAMS)
am__sd_baratinoo_SOURCES_DIST = baratinoo.c baratinoo_compat.h \
	spd_audio.c spd_audio.h module_main.c module_utils.c \
	module_utils.h module_utils_speak_queue.c
am__objects_1 = spd_audio.$(OBJEXT)
am__objects_2 = module_main.$(OBJEXT) module_utils.$(OBJEXT)
@baratinoo_support_TRUE@am_sd_baratinoo_OBJECTS = baratinoo.$(OBJEXT) \
@baratinoo_support_TRUE@	$(am__objects_1) $(am__objects_2) \
@baratinoo_support_TRUE@	module_utils_speak_queue.$(OBJEXT)
sd_baratinoo_OBJECTS = $(am_sd_baratinoo_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
@baratinoo_support_TRUE@sd_baratinoo_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
@baratinoo_support_TRUE@	$(am__DEPENDENCIES_1) \
@baratinoo_support_TRUE@	$(am__DEPENDENCIES_2) \
@baratinoo_support_TRUE@	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_sd_cicero_OBJECTS = cicero.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
sd_cicero_OBJECTS = $(am_sd_cicero_OBJECTS)
sd_cicero_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_sd_dummy_OBJECTS = dummy.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) module_utils_addvoice.$(OBJEXT)
sd_dummy_OBJECTS = $(am_sd_dummy_OBJECTS)
sd_dummy_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_sd_ekho_OBJECTS = sd_ekho-ekho.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) module_utils_speak_queue.$(OBJEXT)
sd_ekho_OBJECTS = $(am_sd_ekho_OBJECTS)
sd_ekho_DEPENDENCIES = $(EKHO_ROOT)/libekho.a \
	$(EKHO_ROOT)/libmusicxml/libmusicxml2.a \
	$(top_builddir)/src/common/libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
sd_ekho_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(sd_ekho_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__sd_espeak_SOURCES_DIST = espeak.c spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h \
	module_utils_speak_queue.c
@espeak_support_TRUE@am_sd_espeak_OBJECTS = espeak.$(OBJEXT) \
@espeak_support_TRUE@	$(am__objects_1) $(am__objects_2) \
@espeak_support_TRUE@	module_utils_speak_queue.$(OBJEXT)
sd_espeak_OBJECTS = $(am_sd_espeak_OBJECTS)
@espeak_support_TRUE@sd_espeak_DEPENDENCIES =  \
@espeak_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@espeak_support_TRUE@	$(am__DEPENDENCIES_1) \
@espeak_support_TRUE@	$(am__DEPENDENCIES_1) \
@espeak_support_TRUE@	$(am__DEPENDENCIES_2)
am__sd_espeak_ng_SOURCES_DIST = espeak-ng.c spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h \
	module_utils_speak_queue.c
am__objects_3 = sd_espeak_ng-spd_audio.$(OBJEXT)
am__objects_4 = sd_espeak_ng-module_main.$(OBJEXT) \
	sd_espeak_ng-module_utils.$(OBJEXT)
@espeak_ng_support_TRUE@am_sd_espeak_ng_OBJECTS =  \
@espeak_ng_support_TRUE@	sd_espeak_ng-espeak-ng.$(OBJEXT) \
@espeak_ng_support_TRUE@	$(am__objects_3) $(am__objects_4) \
@espeak_ng_support_TRUE@	sd_espeak_ng-module_utils_speak_queue.$(OBJEXT)
sd_espeak_ng_OBJECTS = $(am_sd_espeak_ng_OBJECTS)
@espeak_ng_support_TRUE@sd_espeak_ng_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
@espeak_ng_support_TRUE@	$(am__DEPENDENCIES_1) \
@espeak_ng_support_TRUE@	$(am__DEPENDENCIES_1) \
@espeak_ng_support_TRUE@	$(am__DEPENDENCIES_1) \
@espeak_ng_support_TRUE@	$(am__DEPENDENCIES_2)
sd_espeak_ng_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(sd_espeak_ng_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_sd_festival_OBJECTS = festival.$(OBJEXT) festival_client.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
sd_festival_OBJECTS = $(am_sd_festival_OBJECTS)
sd_festival_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am__sd_flite_SOURCES_DIST = flite.c spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h
@flite_support_TRUE@am_sd_flite_OBJECTS = flite.$(OBJEXT) \
@flite_support_TRUE@	$(am__objects_1) $(am__objects_2)
sd_flite_OBJECTS = $(am_sd_flite_OBJECTS)
@flite_support_TRUE@sd_flite_DEPENDENCIES =  \
@flite_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@flite_support_TRUE@	$(am__DEPENDENCIES_1) \
@flite_support_TRUE@	$(am__DEPENDENCIES_1) \
@flite_support_TRUE@	$(am__DEPENDENCIES_1) \
@flite_support_TRUE@	$(am__DEPENDENCIES_2)
am_sd_generic_OBJECTS = generic.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) module_utils_addvoice.$(OBJEXT)
sd_generic_OBJECTS = $(am_sd_generic_OBJECTS)
sd_generic_DEPENDENCIES = $(top_builddir)/src/common/libcommon.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__sd_ibmtts_SOURCES_DIST = ibmtts.c spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h \
	module_utils_addvoice.c
@ibmtts_support_TRUE@am_sd_ibmtts_OBJECTS = ibmtts.$(OBJEXT) \
@ibmtts_support_TRUE@	$(am__objects_1) $(am__objects_2) \
@ibmtts_support_TRUE@	module_utils_addvoice.$(OBJEXT)
sd_ibmtts_OBJECTS = $(am_sd_ibmtts_OBJECTS)
@ibmtts_support_TRUE@sd_ibmtts_DEPENDENCIES =  \
@ibmtts_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@ibmtts_support_TRUE@	$(am__DEPENDENCIES_1) \
@ibmtts_support_TRUE@	$(am__DEPENDENCIES_2) \
@ibmtts_support_TRUE@	$(am__DEPENDENCIES_1)
am__sd_ivona_SOURCES_DIST = ivona.c ivona_client.c ivona_client.h \
	spd_audio.c spd_audio.h module_main.c module_utils.c \
	module_utils.h
@ivona_support_TRUE@am_sd_ivona_OBJECTS = ivona.$(OBJEXT) \
@ivona_support_TRUE@	ivona_client.$(OBJEXT) $(am__objects_1) \
@ivona_support_TRUE@	$(am__objects_2)
sd_ivona_OBJECTS = $(am_sd_ivona_OBJECTS)
@ivona_support_TRUE@sd_ivona_DEPENDENCIES =  \
@ivona_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@ivona_support_TRUE@	$(am__DEPENDENCIES_1) \
@ivona_support_TRUE@	$(am__DEPENDENCIES_2)
am__sd_kali_SOURCES_DIST = kali.cpp spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h
am__objects_5 = sd_kali-spd_audio.$(OBJEXT)
am__objects_6 = sd_kali-module_main.$(OBJEXT) \
	sd_kali-module_utils.$(OBJEXT)
@kali_support_TRUE@am_sd_kali_OBJECTS = sd_kali-kali.$(OBJEXT) \
@kali_support_TRUE@	$(am__objects_5) $(am__objects_6)
sd_kali_OBJECTS = $(am_sd_kali_OBJECTS)
@kali_support_TRUE@sd_kali_DEPENDENCIES =  \
@kali_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@kali_support_TRUE@	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
@kali_support_TRUE@	$(am__DEPENDENCIES_1)
am__sd_pico_SOURCES_DIST = pico.c spd_audio.c spd_audio.h \
	module_main.c module_utils.c module_utils.h
@pico_support_TRUE@am_sd_pico_OBJECTS = pico.$(OBJEXT) \
@pico_support_TRUE@	$(am__objects_1) $(am__objects_2)
sd_pico_OBJECTS = $(am_sd_pico_OBJECTS)
@pico_support_TRUE@sd_pico_DEPENDENCIES =  \
@pico_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@pico_support_TRUE@	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/baratinoo.Po ./$(DEPDIR)/cicero.Po \
	./$(DEPDIR)/dummy.Po ./$(DEPDIR)/espeak.Po \
	./$(DEPDIR)/festival.Po ./$(DEPDIR)/festival_client.Po \
	./$(DEPDIR)/flite.Po ./$(DEPDIR)/generic.Po \
	./$(DEPDIR)/ibmtts.Po ./$(DEPDIR)/ivona.Po \
	./$(DEPDIR)/ivona_client.Po ./$(DEPDIR)/module_main.Po \
	./$(DEPDIR)/module_utils.Po \
	./$(DEPDIR)/module_utils_addvoice.Po \
	./$(DEPDIR)/module_utils_speak_queue.Po ./$(DEPDIR)/pico.Po \
	./$(DEPDIR)/sd_ekho-ekho.Po \
	./$(DEPDIR)/sd_espeak_ng-espeak-ng.Po \
	./$(DEPDIR)/sd_espeak_ng-module_main.Po \
	./$(DEPDIR)/sd_espeak_ng-module_utils.Po \
	./$(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po \
	./$(DEPDIR)/sd_espeak_ng-spd_audio.Po \
	./$(DEPDIR)/sd_kali-kali.Po ./$(DEPDIR)/sd_kali-module_main.Po \
	./$(DEPDIR)/sd_kali-module_utils.Po \
	./$(DEPDIR)/sd_kali-spd_audio.Po ./$(DEPDIR)/spd_audio.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(sd_baratinoo_SOURCES) $(sd_cicero_SOURCES) \
	$(sd_dummy_SOURCES) $(sd_ekho_SOURCES) $(sd_espeak_SOURCES) \
	$(sd_espeak_ng_SOURCES) $(sd_festival_SOURCES) \
	$(sd_flite_SOURCES) $(sd_generic_SOURCES) $(sd_ibmtts_SOURCES) \
	$(sd_ivona_SOURCES) $(sd_kali_SOURCES) $(sd_pico_SOURCES)
DIST_SOURCES = $(am__sd_baratinoo_SOURCES_DIST) $(sd_cicero_SOURCES) \
	$(sd_dummy_SOURCES) $(sd_ekho_SOURCES) \
	$(am__sd_espeak_SOURCES_DIST) $(am__sd_espeak_ng_SOURCES_DIST) \
	$(sd_festival_SOURCES) $(am__sd_flite_SOURCES_DIST) \
	$(sd_generic_SOURCES) $(am__sd_ibmtts_SOURCES_DIST) \
	$(am__sd_ivona_SOURCES_DIST) $(am__sd_kali_SOURCES_DIST) \
	$(am__sd_pico_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(dist_snddata_DATA)
am__noinst_HEADERS_DIST = kali_shim/kali/Kali/kali.h \
	module_utils_speak_queue.h
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAG_PULSEAUDIO = @CFLAG_PULSEAUDIO@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOTCONF_CFLAGS = @DOTCONF_CFLAGS@
DOTCONF_LIBS = @DOTCONF_LIBS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ERROR_CFLAGS = @ERROR_CFLAGS@
ESPEAK_NG_CFLAGS = @ESPEAK_NG_CFLAGS@
ESPEAK_NG_LIBS = @ESPEAK_NG_LIBS@
EXEEXT = @EXEEXT@
EXTRA_ESPEAK_LIBS = @EXTRA_ESPEAK_LIBS@
EXTRA_SOCKET_LIBS = @EXTRA_SOCKET_LIBS@
FGREP = @FGREP@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMODULE_CFLAGS = @GMODULE_CFLAGS@
GMODULE_LIBS = @GMODULE_LIBS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTHREAD_CFLAGS = @GTHREAD_CFLAGS@
GTHREAD_LIBS = @GTHREAD_LIBS@
HELP2MAN = @HELP2MAN@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBAO_CFLAGS = @LIBAO_CFLAGS@
LIBAO_LIBS = @LIBAO_LIBS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_PULSEAUDIO = @LIB_PULSEAUDIO@
LIB_SPD_AGE = @LIB_SPD_AGE@
LIB_SPD_CURRENT = @LIB_SPD_CURRENT@
LIB_SPD_REVISION = @LIB_SPD_REVISION@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAJOR_VERSION = @MAJOR_VERSION@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MICRO_VERSION = @MICRO_VERSION@
MINOR_VERSION = @MINOR_VERSION@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NAS_LIBS = @NAS_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
PULSE_CFLAGS = @PULSE_CFLAGS@
PULSE_LIBS = @PULSE_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RDYNAMIC = @RDYNAMIC@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
SNDFILE_LIBS = @SNDFILE_LIBS@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
audio_dlopen_modules = @audio_dlopen_modules@
audiodir = @audiodir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
clientconfdir = @clientconfdir@
clientconforigdir = @clientconforigdir@
datadir = @datadir@
datarootdir = @datarootdir@
default_audio_method = @default_audio_method@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
flite_basic = @flite_basic@
flite_kal = @flite_kal@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ibmtts_include = @ibmtts_include@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedatadir = @localedatadir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
modulebindir = @modulebindir@
moduleconfdir = @moduleconfdir@
moduleconforigdir = @moduleconforigdir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
snddatadir = @snddatadir@
spdconfdir = @spdconfdir@
spdconforigdir = @spdconforigdir@
spddesktopconforigdir = @spddesktopconforigdir@
spdincludedir = @spdincludedir@
spdlibdir = @spdlibdir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
systemdsystemunitdir = @systemdsystemunitdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = baratinoo_shim.c README.baratinoo kali_Kali_shim.cpp \
	kali_KGlobal_shim.cpp kali_KTrans_shim.cpp \
	kali_KParle_shim.cpp kali_KAnalyse_shim.cpp ibmtts_shim.c \
	eci.h mluvitko.c
CLEANFILES = $(am__append_4) $(am__append_11) $(am__append_15)
inc_local = -I$(top_srcdir)/include
audio_SOURCES = spd_audio.c spd_audio.h
common_SOURCES = module_main.c module_utils.c module_utils.h
common_LDADD = $(SNDFILE_LIBS) $(DOTCONF_LIBS) $(GLIB_LIBS) $(GTHREAD_LIBS)
AM_CFLAGS = $(ERROR_CFLAGS)
AM_CPPFLAGS = $(inc_local) -DDATADIR=\"$(snddatadir)\" -D_GNU_SOURCE \
	-DPLUGIN_DIR="\"$(audiodir)\"" \
	$(DOTCONF_CFLAGS) $(GLIB_CFLAGS) $(GTHREAD_CFLAGS) \
	$(ibmtts_include) $(SNDFILE_CFLAGS)

EKHO_ROOT = ../../..
sd_ekho_SOURCES = ekho.cc $(audio_SOURCES) $(common_SOURCES) module_utils_speak_queue.c
sd_ekho_CXXFLAGS = -g -DESPEAK_NG_INCLUDE $(ESPEAK_NG_CFLAGS) -I$(EKHO_ROOT)/src -I$(EKHO_ROOT)/utfcpp/source -I$(EKHO_ROOT)/sonic 
sd_ekho_LDADD = $(EKHO_ROOT)/libekho.a $(EKHO_ROOT)/libmusicxml/libmusicxml2.a -lvorbisenc -lvorbis -lm -logg \
	@LIB_PULSEAUDIO@  $(MP3LAME_LIBS) \
	$(top_builddir)/src/common/libcommon.la \
	$(audio_dlopen_modules) \
	$(ESPEAK_NG_LIBS) $(EXTRA_ESPEAK_LIBS) \
	$(common_LDADD)

sd_dummy_SOURCES = dummy.c $(audio_SOURCES) $(common_SOURCES) \
	module_utils_addvoice.c

sd_dummy_LDADD = $(top_builddir)/src/common/libcommon.la \
	$(audio_dlopen_modules) \
	$(common_LDADD)

dist_snddata_DATA = dummy-message.wav
sd_festival_SOURCES = festival.c festival_client.c festival_client.h \
	$(audio_SOURCES) $(common_SOURCES)

sd_festival_LDADD = $(top_builddir)/src/common/libcommon.la \
	$(audio_dlopen_modules) \
	$(common_LDADD) $(EXTRA_SOCKET_LIBS)

sd_generic_SOURCES = generic.c $(audio_SOURCES) $(common_SOURCES) \
	module_utils_addvoice.c

sd_generic_LDADD = $(top_builddir)/src/common/libcommon.la \
	$(audio_dlopen_modules) \
	$(common_LDADD)

sd_cicero_SOURCES = cicero.c $(audio_SOURCES) $(common_SOURCES)
sd_cicero_LDADD = $(top_builddir)/src/common/libcommon.la \
	$(audio_dlopen_modules) \
	$(common_LDADD)

@flite_support_TRUE@sd_flite_SOURCES = flite.c $(audio_SOURCES) $(common_SOURCES)
@flite_support_TRUE@sd_flite_LDADD = $(top_builddir)/src/common/libcommon.la \
@flite_support_TRUE@	$(audio_dlopen_modules) \
@flite_support_TRUE@	$(flite_kal) $(flite_basic) \
@flite_support_TRUE@	$(common_LDADD)

@ibmtts_support_TRUE@sd_ibmtts_SOURCES = ibmtts.c $(audio_SOURCES) $(common_SOURCES) \
@ibmtts_support_TRUE@	module_utils_addvoice.c

@ibmtts_support_TRUE@sd_ibmtts_LDADD =  \
@ibmtts_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@ibmtts_support_TRUE@	$(audio_dlopen_modules) -libmeci \
@ibmtts_support_TRUE@	$(common_LDADD) $(am__append_3)
@ibmtts_shim_TRUE@@ibmtts_support_TRUE@EXTRA_sd_ibmtts_DEPENDENCIES = libibmeci.so
@espeak_support_TRUE@sd_espeak_SOURCES = espeak.c $(audio_SOURCES) $(common_SOURCES) module_utils_speak_queue.c
@espeak_support_TRUE@sd_espeak_LDADD = $(top_builddir)/src/common/libcommon.la \
@espeak_support_TRUE@	$(audio_dlopen_modules) \
@espeak_support_TRUE@	-lespeak $(EXTRA_ESPEAK_LIBS) \
@espeak_support_TRUE@	$(common_LDADD)

@espeak_ng_support_TRUE@sd_espeak_ng_SOURCES = espeak-ng.c $(audio_SOURCES) $(common_SOURCES) module_utils_speak_queue.c
@espeak_ng_support_TRUE@sd_espeak_ng_CFLAGS = -DESPEAK_NG_INCLUDE $(ESPEAK_NG_CFLAGS)
@espeak_ng_support_TRUE@sd_espeak_ng_LDADD = $(top_builddir)/src/common/libcommon.la \
@espeak_ng_support_TRUE@	$(audio_dlopen_modules) \
@espeak_ng_support_TRUE@	$(ESPEAK_NG_LIBS) $(EXTRA_ESPEAK_LIBS) \
@espeak_ng_support_TRUE@	$(common_LDADD)

@ivona_support_TRUE@sd_ivona_SOURCES = ivona.c ivona_client.c ivona_client.h $(audio_SOURCES) \
@ivona_support_TRUE@	$(common_SOURCES)

@ivona_support_TRUE@sd_ivona_LDADD = $(top_builddir)/src/common/libcommon.la \
@ivona_support_TRUE@	$(audio_dlopen_modules) \
@ivona_support_TRUE@	-ldumbtts \
@ivona_support_TRUE@	$(common_LDADD)

@pico_support_TRUE@sd_pico_SOURCES = pico.c $(audio_SOURCES) $(common_SOURCES)
@pico_support_TRUE@sd_pico_LDADD = $(top_builddir)/src/common/libcommon.la \
@pico_support_TRUE@	$(audio_dlopen_modules) -lttspico \
@pico_support_TRUE@	$(common_LDADD)

@baratinoo_support_TRUE@sd_baratinoo_SOURCES = baratinoo.c baratinoo_compat.h $(audio_SOURCES) $(common_SOURCES) module_utils_speak_queue.c
@baratinoo_support_TRUE@sd_baratinoo_LDADD = $(top_builddir)/src/common/libcommon.la \
@baratinoo_support_TRUE@	$(audio_dlopen_modules) -lbaratinoo \
@baratinoo_support_TRUE@	-lpthread -ldl $(common_LDADD) \
@baratinoo_support_TRUE@	$(am__append_10)
@baratinoo_shim_TRUE@@baratinoo_support_TRUE@EXTRA_sd_baratinoo_DEPENDENCIES = libbaratinoo.so
@kali_support_TRUE@KALI_DIR = /usr/lib/kali
@kali_support_TRUE@sd_kali_SOURCES = kali.cpp $(audio_SOURCES) $(common_SOURCES)
@kali_support_TRUE@sd_kali_LDADD =  \
@kali_support_TRUE@	$(top_builddir)/src/common/libcommon.la \
@kali_support_TRUE@	$(audio_dlopen_modules) -lKali -lKGlobal \
@kali_support_TRUE@	-lKTrans -lKParle -lKAnalyse \
@kali_support_TRUE@	$(common_LDADD) $(am__append_13)
@kali_support_TRUE@sd_kali_CPPFLAGS = -DLINUX $(AM_CPPFLAGS) \
@kali_support_TRUE@	$(am__append_14)
@kali_shim_TRUE@@kali_support_TRUE@noinst_HEADERS = kali_shim/kali/Kali/kali.h module_utils_speak_queue.h
@kali_shim_TRUE@@kali_support_TRUE@EXTRA_sd_kali_DEPENDENCIES = libKali.so libKGlobal.so libKTrans.so libKParle.so libKAnalyse.so
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/modules/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/modules/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-modulebinPROGRAMS: $(modulebin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(modulebin_PROGRAMS)'; test -n "$(modulebindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(modulebindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(modulebindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(modulebindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(modulebindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-modulebinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(modulebin_PROGRAMS)'; test -n "$(modulebindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(modulebindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(modulebindir)" && rm -f $$files

clean-modulebinPROGRAMS:
	@list='$(modulebin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

sd_baratinoo$(EXEEXT): $(sd_baratinoo_OBJECTS) $(sd_baratinoo_DEPENDENCIES) $(EXTRA_sd_baratinoo_DEPENDENCIES) 
	@rm -f sd_baratinoo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_baratinoo_OBJECTS) $(sd_baratinoo_LDADD) $(LIBS)

sd_cicero$(EXEEXT): $(sd_cicero_OBJECTS) $(sd_cicero_DEPENDENCIES) $(EXTRA_sd_cicero_DEPENDENCIES) 
	@rm -f sd_cicero$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_cicero_OBJECTS) $(sd_cicero_LDADD) $(LIBS)

sd_dummy$(EXEEXT): $(sd_dummy_OBJECTS) $(sd_dummy_DEPENDENCIES) $(EXTRA_sd_dummy_DEPENDENCIES) 
	@rm -f sd_dummy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_dummy_OBJECTS) $(sd_dummy_LDADD) $(LIBS)

sd_ekho$(EXEEXT): $(sd_ekho_OBJECTS) $(sd_ekho_DEPENDENCIES) $(EXTRA_sd_ekho_DEPENDENCIES) 
	@rm -f sd_ekho$(EXEEXT)
	$(AM_V_CXXLD)$(sd_ekho_LINK) $(sd_ekho_OBJECTS) $(sd_ekho_LDADD) $(LIBS)

sd_espeak$(EXEEXT): $(sd_espeak_OBJECTS) $(sd_espeak_DEPENDENCIES) $(EXTRA_sd_espeak_DEPENDENCIES) 
	@rm -f sd_espeak$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_espeak_OBJECTS) $(sd_espeak_LDADD) $(LIBS)

sd_espeak-ng$(EXEEXT): $(sd_espeak_ng_OBJECTS) $(sd_espeak_ng_DEPENDENCIES) $(EXTRA_sd_espeak_ng_DEPENDENCIES) 
	@rm -f sd_espeak-ng$(EXEEXT)
	$(AM_V_CCLD)$(sd_espeak_ng_LINK) $(sd_espeak_ng_OBJECTS) $(sd_espeak_ng_LDADD) $(LIBS)

sd_festival$(EXEEXT): $(sd_festival_OBJECTS) $(sd_festival_DEPENDENCIES) $(EXTRA_sd_festival_DEPENDENCIES) 
	@rm -f sd_festival$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_festival_OBJECTS) $(sd_festival_LDADD) $(LIBS)

sd_flite$(EXEEXT): $(sd_flite_OBJECTS) $(sd_flite_DEPENDENCIES) $(EXTRA_sd_flite_DEPENDENCIES) 
	@rm -f sd_flite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_flite_OBJECTS) $(sd_flite_LDADD) $(LIBS)

sd_generic$(EXEEXT): $(sd_generic_OBJECTS) $(sd_generic_DEPENDENCIES) $(EXTRA_sd_generic_DEPENDENCIES) 
	@rm -f sd_generic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_generic_OBJECTS) $(sd_generic_LDADD) $(LIBS)

sd_ibmtts$(EXEEXT): $(sd_ibmtts_OBJECTS) $(sd_ibmtts_DEPENDENCIES) $(EXTRA_sd_ibmtts_DEPENDENCIES) 
	@rm -f sd_ibmtts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_ibmtts_OBJECTS) $(sd_ibmtts_LDADD) $(LIBS)

sd_ivona$(EXEEXT): $(sd_ivona_OBJECTS) $(sd_ivona_DEPENDENCIES) $(EXTRA_sd_ivona_DEPENDENCIES) 
	@rm -f sd_ivona$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_ivona_OBJECTS) $(sd_ivona_LDADD) $(LIBS)

sd_kali$(EXEEXT): $(sd_kali_OBJECTS) $(sd_kali_DEPENDENCIES) $(EXTRA_sd_kali_DEPENDENCIES) 
	@rm -f sd_kali$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sd_kali_OBJECTS) $(sd_kali_LDADD) $(LIBS)

sd_pico$(EXEEXT): $(sd_pico_OBJECTS) $(sd_pico_DEPENDENCIES) $(EXTRA_sd_pico_DEPENDENCIES) 
	@rm -f sd_pico$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sd_pico_OBJECTS) $(sd_pico_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/baratinoo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cicero.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/espeak.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/festival.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/festival_client.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flite.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ibmtts.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ivona.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ivona_client.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module_utils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module_utils_addvoice.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module_utils_speak_queue.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pico.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_ekho-ekho.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_espeak_ng-espeak-ng.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_espeak_ng-module_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_espeak_ng-module_utils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_espeak_ng-spd_audio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_kali-kali.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_kali-module_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_kali-module_utils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sd_kali-spd_audio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spd_audio.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

sd_espeak_ng-espeak-ng.o: espeak-ng.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-espeak-ng.o -MD -MP -MF $(DEPDIR)/sd_espeak_ng-espeak-ng.Tpo -c -o sd_espeak_ng-espeak-ng.o `test -f 'espeak-ng.c' || echo '$(srcdir)/'`espeak-ng.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-espeak-ng.Tpo $(DEPDIR)/sd_espeak_ng-espeak-ng.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='espeak-ng.c' object='sd_espeak_ng-espeak-ng.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-espeak-ng.o `test -f 'espeak-ng.c' || echo '$(srcdir)/'`espeak-ng.c

sd_espeak_ng-espeak-ng.obj: espeak-ng.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-espeak-ng.obj -MD -MP -MF $(DEPDIR)/sd_espeak_ng-espeak-ng.Tpo -c -o sd_espeak_ng-espeak-ng.obj `if test -f 'espeak-ng.c'; then $(CYGPATH_W) 'espeak-ng.c'; else $(CYGPATH_W) '$(srcdir)/espeak-ng.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-espeak-ng.Tpo $(DEPDIR)/sd_espeak_ng-espeak-ng.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='espeak-ng.c' object='sd_espeak_ng-espeak-ng.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-espeak-ng.obj `if test -f 'espeak-ng.c'; then $(CYGPATH_W) 'espeak-ng.c'; else $(CYGPATH_W) '$(srcdir)/espeak-ng.c'; fi`

sd_espeak_ng-spd_audio.o: spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-spd_audio.o -MD -MP -MF $(DEPDIR)/sd_espeak_ng-spd_audio.Tpo -c -o sd_espeak_ng-spd_audio.o `test -f 'spd_audio.c' || echo '$(srcdir)/'`spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-spd_audio.Tpo $(DEPDIR)/sd_espeak_ng-spd_audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spd_audio.c' object='sd_espeak_ng-spd_audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-spd_audio.o `test -f 'spd_audio.c' || echo '$(srcdir)/'`spd_audio.c

sd_espeak_ng-spd_audio.obj: spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-spd_audio.obj -MD -MP -MF $(DEPDIR)/sd_espeak_ng-spd_audio.Tpo -c -o sd_espeak_ng-spd_audio.obj `if test -f 'spd_audio.c'; then $(CYGPATH_W) 'spd_audio.c'; else $(CYGPATH_W) '$(srcdir)/spd_audio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-spd_audio.Tpo $(DEPDIR)/sd_espeak_ng-spd_audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spd_audio.c' object='sd_espeak_ng-spd_audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-spd_audio.obj `if test -f 'spd_audio.c'; then $(CYGPATH_W) 'spd_audio.c'; else $(CYGPATH_W) '$(srcdir)/spd_audio.c'; fi`

sd_espeak_ng-module_main.o: module_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_main.o -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_main.Tpo -c -o sd_espeak_ng-module_main.o `test -f 'module_main.c' || echo '$(srcdir)/'`module_main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_main.Tpo $(DEPDIR)/sd_espeak_ng-module_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_main.c' object='sd_espeak_ng-module_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_main.o `test -f 'module_main.c' || echo '$(srcdir)/'`module_main.c

sd_espeak_ng-module_main.obj: module_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_main.obj -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_main.Tpo -c -o sd_espeak_ng-module_main.obj `if test -f 'module_main.c'; then $(CYGPATH_W) 'module_main.c'; else $(CYGPATH_W) '$(srcdir)/module_main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_main.Tpo $(DEPDIR)/sd_espeak_ng-module_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_main.c' object='sd_espeak_ng-module_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_main.obj `if test -f 'module_main.c'; then $(CYGPATH_W) 'module_main.c'; else $(CYGPATH_W) '$(srcdir)/module_main.c'; fi`

sd_espeak_ng-module_utils.o: module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_utils.o -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_utils.Tpo -c -o sd_espeak_ng-module_utils.o `test -f 'module_utils.c' || echo '$(srcdir)/'`module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_utils.Tpo $(DEPDIR)/sd_espeak_ng-module_utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils.c' object='sd_espeak_ng-module_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_utils.o `test -f 'module_utils.c' || echo '$(srcdir)/'`module_utils.c

sd_espeak_ng-module_utils.obj: module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_utils.obj -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_utils.Tpo -c -o sd_espeak_ng-module_utils.obj `if test -f 'module_utils.c'; then $(CYGPATH_W) 'module_utils.c'; else $(CYGPATH_W) '$(srcdir)/module_utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_utils.Tpo $(DEPDIR)/sd_espeak_ng-module_utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils.c' object='sd_espeak_ng-module_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_utils.obj `if test -f 'module_utils.c'; then $(CYGPATH_W) 'module_utils.c'; else $(CYGPATH_W) '$(srcdir)/module_utils.c'; fi`

sd_espeak_ng-module_utils_speak_queue.o: module_utils_speak_queue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_utils_speak_queue.o -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Tpo -c -o sd_espeak_ng-module_utils_speak_queue.o `test -f 'module_utils_speak_queue.c' || echo '$(srcdir)/'`module_utils_speak_queue.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Tpo $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils_speak_queue.c' object='sd_espeak_ng-module_utils_speak_queue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_utils_speak_queue.o `test -f 'module_utils_speak_queue.c' || echo '$(srcdir)/'`module_utils_speak_queue.c

sd_espeak_ng-module_utils_speak_queue.obj: module_utils_speak_queue.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -MT sd_espeak_ng-module_utils_speak_queue.obj -MD -MP -MF $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Tpo -c -o sd_espeak_ng-module_utils_speak_queue.obj `if test -f 'module_utils_speak_queue.c'; then $(CYGPATH_W) 'module_utils_speak_queue.c'; else $(CYGPATH_W) '$(srcdir)/module_utils_speak_queue.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Tpo $(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils_speak_queue.c' object='sd_espeak_ng-module_utils_speak_queue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_espeak_ng_CFLAGS) $(CFLAGS) -c -o sd_espeak_ng-module_utils_speak_queue.obj `if test -f 'module_utils_speak_queue.c'; then $(CYGPATH_W) 'module_utils_speak_queue.c'; else $(CYGPATH_W) '$(srcdir)/module_utils_speak_queue.c'; fi`

sd_kali-spd_audio.o: spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-spd_audio.o -MD -MP -MF $(DEPDIR)/sd_kali-spd_audio.Tpo -c -o sd_kali-spd_audio.o `test -f 'spd_audio.c' || echo '$(srcdir)/'`spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-spd_audio.Tpo $(DEPDIR)/sd_kali-spd_audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spd_audio.c' object='sd_kali-spd_audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-spd_audio.o `test -f 'spd_audio.c' || echo '$(srcdir)/'`spd_audio.c

sd_kali-spd_audio.obj: spd_audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-spd_audio.obj -MD -MP -MF $(DEPDIR)/sd_kali-spd_audio.Tpo -c -o sd_kali-spd_audio.obj `if test -f 'spd_audio.c'; then $(CYGPATH_W) 'spd_audio.c'; else $(CYGPATH_W) '$(srcdir)/spd_audio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-spd_audio.Tpo $(DEPDIR)/sd_kali-spd_audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='spd_audio.c' object='sd_kali-spd_audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-spd_audio.obj `if test -f 'spd_audio.c'; then $(CYGPATH_W) 'spd_audio.c'; else $(CYGPATH_W) '$(srcdir)/spd_audio.c'; fi`

sd_kali-module_main.o: module_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-module_main.o -MD -MP -MF $(DEPDIR)/sd_kali-module_main.Tpo -c -o sd_kali-module_main.o `test -f 'module_main.c' || echo '$(srcdir)/'`module_main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-module_main.Tpo $(DEPDIR)/sd_kali-module_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_main.c' object='sd_kali-module_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-module_main.o `test -f 'module_main.c' || echo '$(srcdir)/'`module_main.c

sd_kali-module_main.obj: module_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-module_main.obj -MD -MP -MF $(DEPDIR)/sd_kali-module_main.Tpo -c -o sd_kali-module_main.obj `if test -f 'module_main.c'; then $(CYGPATH_W) 'module_main.c'; else $(CYGPATH_W) '$(srcdir)/module_main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-module_main.Tpo $(DEPDIR)/sd_kali-module_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_main.c' object='sd_kali-module_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-module_main.obj `if test -f 'module_main.c'; then $(CYGPATH_W) 'module_main.c'; else $(CYGPATH_W) '$(srcdir)/module_main.c'; fi`

sd_kali-module_utils.o: module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-module_utils.o -MD -MP -MF $(DEPDIR)/sd_kali-module_utils.Tpo -c -o sd_kali-module_utils.o `test -f 'module_utils.c' || echo '$(srcdir)/'`module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-module_utils.Tpo $(DEPDIR)/sd_kali-module_utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils.c' object='sd_kali-module_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-module_utils.o `test -f 'module_utils.c' || echo '$(srcdir)/'`module_utils.c

sd_kali-module_utils.obj: module_utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sd_kali-module_utils.obj -MD -MP -MF $(DEPDIR)/sd_kali-module_utils.Tpo -c -o sd_kali-module_utils.obj `if test -f 'module_utils.c'; then $(CYGPATH_W) 'module_utils.c'; else $(CYGPATH_W) '$(srcdir)/module_utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-module_utils.Tpo $(DEPDIR)/sd_kali-module_utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='module_utils.c' object='sd_kali-module_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sd_kali-module_utils.obj `if test -f 'module_utils.c'; then $(CYGPATH_W) 'module_utils.c'; else $(CYGPATH_W) '$(srcdir)/module_utils.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

sd_ekho-ekho.o: ekho.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_ekho_CXXFLAGS) $(CXXFLAGS) -MT sd_ekho-ekho.o -MD -MP -MF $(DEPDIR)/sd_ekho-ekho.Tpo -c -o sd_ekho-ekho.o `test -f 'ekho.cc' || echo '$(srcdir)/'`ekho.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_ekho-ekho.Tpo $(DEPDIR)/sd_ekho-ekho.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ekho.cc' object='sd_ekho-ekho.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_ekho_CXXFLAGS) $(CXXFLAGS) -c -o sd_ekho-ekho.o `test -f 'ekho.cc' || echo '$(srcdir)/'`ekho.cc

sd_ekho-ekho.obj: ekho.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_ekho_CXXFLAGS) $(CXXFLAGS) -MT sd_ekho-ekho.obj -MD -MP -MF $(DEPDIR)/sd_ekho-ekho.Tpo -c -o sd_ekho-ekho.obj `if test -f 'ekho.cc'; then $(CYGPATH_W) 'ekho.cc'; else $(CYGPATH_W) '$(srcdir)/ekho.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_ekho-ekho.Tpo $(DEPDIR)/sd_ekho-ekho.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ekho.cc' object='sd_ekho-ekho.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sd_ekho_CXXFLAGS) $(CXXFLAGS) -c -o sd_ekho-ekho.obj `if test -f 'ekho.cc'; then $(CYGPATH_W) 'ekho.cc'; else $(CYGPATH_W) '$(srcdir)/ekho.cc'; fi`

sd_kali-kali.o: kali.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sd_kali-kali.o -MD -MP -MF $(DEPDIR)/sd_kali-kali.Tpo -c -o sd_kali-kali.o `test -f 'kali.cpp' || echo '$(srcdir)/'`kali.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-kali.Tpo $(DEPDIR)/sd_kali-kali.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='kali.cpp' object='sd_kali-kali.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sd_kali-kali.o `test -f 'kali.cpp' || echo '$(srcdir)/'`kali.cpp

sd_kali-kali.obj: kali.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sd_kali-kali.obj -MD -MP -MF $(DEPDIR)/sd_kali-kali.Tpo -c -o sd_kali-kali.obj `if test -f 'kali.cpp'; then $(CYGPATH_W) 'kali.cpp'; else $(CYGPATH_W) '$(srcdir)/kali.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sd_kali-kali.Tpo $(DEPDIR)/sd_kali-kali.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='kali.cpp' object='sd_kali-kali.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sd_kali_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sd_kali-kali.obj `if test -f 'kali.cpp'; then $(CYGPATH_W) 'kali.cpp'; else $(CYGPATH_W) '$(srcdir)/kali.cpp'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_snddataDATA: $(dist_snddata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_snddata_DATA)'; test -n "$(snddatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(snddatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(snddatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(snddatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(snddatadir)" || exit $$?; \
	done

uninstall-dist_snddataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_snddata_DATA)'; test -n "$(snddatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(snddatadir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(modulebindir)" "$(DESTDIR)$(snddatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-modulebinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/baratinoo.Po
	-rm -f ./$(DEPDIR)/cicero.Po
	-rm -f ./$(DEPDIR)/dummy.Po
	-rm -f ./$(DEPDIR)/espeak.Po
	-rm -f ./$(DEPDIR)/festival.Po
	-rm -f ./$(DEPDIR)/festival_client.Po
	-rm -f ./$(DEPDIR)/flite.Po
	-rm -f ./$(DEPDIR)/generic.Po
	-rm -f ./$(DEPDIR)/ibmtts.Po
	-rm -f ./$(DEPDIR)/ivona.Po
	-rm -f ./$(DEPDIR)/ivona_client.Po
	-rm -f ./$(DEPDIR)/module_main.Po
	-rm -f ./$(DEPDIR)/module_utils.Po
	-rm -f ./$(DEPDIR)/module_utils_addvoice.Po
	-rm -f ./$(DEPDIR)/module_utils_speak_queue.Po
	-rm -f ./$(DEPDIR)/pico.Po
	-rm -f ./$(DEPDIR)/sd_ekho-ekho.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-espeak-ng.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_main.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_utils.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-spd_audio.Po
	-rm -f ./$(DEPDIR)/sd_kali-kali.Po
	-rm -f ./$(DEPDIR)/sd_kali-module_main.Po
	-rm -f ./$(DEPDIR)/sd_kali-module_utils.Po
	-rm -f ./$(DEPDIR)/sd_kali-spd_audio.Po
	-rm -f ./$(DEPDIR)/spd_audio.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_snddataDATA install-modulebinPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/baratinoo.Po
	-rm -f ./$(DEPDIR)/cicero.Po
	-rm -f ./$(DEPDIR)/dummy.Po
	-rm -f ./$(DEPDIR)/espeak.Po
	-rm -f ./$(DEPDIR)/festival.Po
	-rm -f ./$(DEPDIR)/festival_client.Po
	-rm -f ./$(DEPDIR)/flite.Po
	-rm -f ./$(DEPDIR)/generic.Po
	-rm -f ./$(DEPDIR)/ibmtts.Po
	-rm -f ./$(DEPDIR)/ivona.Po
	-rm -f ./$(DEPDIR)/ivona_client.Po
	-rm -f ./$(DEPDIR)/module_main.Po
	-rm -f ./$(DEPDIR)/module_utils.Po
	-rm -f ./$(DEPDIR)/module_utils_addvoice.Po
	-rm -f ./$(DEPDIR)/module_utils_speak_queue.Po
	-rm -f ./$(DEPDIR)/pico.Po
	-rm -f ./$(DEPDIR)/sd_ekho-ekho.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-espeak-ng.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_main.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_utils.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-module_utils_speak_queue.Po
	-rm -f ./$(DEPDIR)/sd_espeak_ng-spd_audio.Po
	-rm -f ./$(DEPDIR)/sd_kali-kali.Po
	-rm -f ./$(DEPDIR)/sd_kali-module_main.Po
	-rm -f ./$(DEPDIR)/sd_kali-module_utils.Po
	-rm -f ./$(DEPDIR)/sd_kali-spd_audio.Po
	-rm -f ./$(DEPDIR)/spd_audio.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_snddataDATA uninstall-modulebinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-modulebinPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dist_snddataDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-modulebinPROGRAMS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-dist_snddataDATA \
	uninstall-modulebinPROGRAMS

.PRECIOUS: Makefile


@ibmtts_shim_TRUE@@ibmtts_support_TRUE@libibmeci.so: $(srcdir)/ibmtts_shim.c
@ibmtts_shim_TRUE@@ibmtts_support_TRUE@	$(CC) -fPIC -shared $< -o $@

@baratinoo_shim_TRUE@@baratinoo_support_TRUE@libbaratinoo.so: $(srcdir)/baratinoo_shim.c
@baratinoo_shim_TRUE@@baratinoo_support_TRUE@	$(CC) -fPIC -shared $< -o $@

@kali_shim_TRUE@@kali_support_TRUE@lib%.so: $(srcdir)/kali_%_shim.cpp
@kali_shim_TRUE@@kali_support_TRUE@	$(CXX) -fPIC -shared $< -o $@ -I$(srcdir)/kali_shim

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
